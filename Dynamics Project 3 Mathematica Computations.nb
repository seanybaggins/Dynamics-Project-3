(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    257248,       4920]
NotebookOptionsPosition[    253743,       4794]
NotebookOutlinePosition[    254120,       4810]
CellTagsIndexPosition[    254077,       4807]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Team 2\n   Sean Link\n   Jinsung Lee\n   Parker \
Hailberg\nES204-PC01\nProject 3",
 FontFamily->"Gill Sans MT",
 FontSize->36]], "Title",
 CellChangeTimes->{{3.702077557146508*^9, 3.702077610680326*^9}}],

Cell[CellGroupData[{

Cell["Equation and Variable Definition", "Section",
 CellChangeTimes->{{3.7020777123529825`*^9, 3.70207771954618*^9}}],

Cell[TextData[{
 StyleBox["Equations",
  FontVariations->{"Underline"->True}],
 "\n    LagrangianS = Lagrangian of the entire system\n    Lagrangianhc = \
Lagrangian of the half cylinder\n    LagrangianDisk = Lagrangian of the disk\n\
",
 StyleBox["Variables",
  FontVariations->{"Underline"->True}],
 "\n    M = mass of the half cylinder (kg)\n    R = radious of the half \
cylinder (m)\n    Izcmhc = Moment of inertia of the half cylinder about its \
center of mass (kg ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")\n    Vcmhc = velocity of the center of mass of the half cylinder\n    \
\[Theta] [t] = angular displacement of the half cylinder (rad)\n    \[Theta]\
\[CloseCurlyQuote][t] = angular velocity of the half cylinder (rad/s)\n    g \
= acceleration due to gravity ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    FractionBox["m", 
     SuperscriptBox["s", "2"]], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "\n    m = mass of the disk (kg)\n    VcmDisk = velocity of the center of \
mass of the disk (m/s)\n    IzcmDisk = moment of inertia of the disk about \
its center of mass (kg ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ")\n    wd = rotiational velocity of the disk (rad/s)\n    r = radious of \
the disk (m)\n    \[Phi] [t] = angular displacement of the disk relative to \
the contact point between the half cylinder and the ground (rad)\n    \[Phi]\
\[CloseCurlyQuote][t] = rate of change of the angular displacement of the \
half cylinder with respect to time (rad/s)"
}], "Text",
 CellChangeTimes->{{3.7020777311982613`*^9, 3.7020783516897936`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Part 1: storing moment of inertia of the half cylinder about its center of \
mass\
\>", "Section",
 CellChangeTimes->{{3.7020784070868115`*^9, 3.702078429713716*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Izcmhc", "=", 
   RowBox[{"M", " ", 
    SuperscriptBox["R", "2"], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox["4", 
       SuperscriptBox["\[Pi]", "2"]]}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7020349011082478`*^9, 3.7020349301717806`*^9}, {
  3.702042047179865*^9, 3.7020420479158506`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 2: Lagrangian of Half Cylinder", "Section",
 CellChangeTimes->{{3.7020352809080443`*^9, 3.7020352999835196`*^9}, {
  3.7020386779657907`*^9, 3.702038678055806*^9}, {3.702078437199149*^9, 
  3.7020784399152994`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Lagrangianhc", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "M", " ", 
     SuperscriptBox["Vcmhc", "2"]}], "+", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "Izcmhc", "*", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], ")"}], "2"]}], "-", 
    RowBox[{"M", " ", "g", " ", "R", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        FractionBox["2", "\[Pi]"], 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7020349526852183`*^9, 3.7020350385024247`*^9}}],

Cell[CellGroupData[{

Cell["Storing velocity of the center of mass of the half cylindar", \
"Subsection",
 CellChangeTimes->{{3.7020353189484625`*^9, 3.7020353349273796`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Vcmhc", " ", "=", " ", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], " ", "R", "  ", 
          FractionBox["2", "\[Pi]"], 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], " ", "R"}]}], ")"}], 
       "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], " ", "R", " ", 
         FractionBox["2", "\[Pi]"], 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], ")"}], "2"]}], 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.70203505693515*^9, 3.7020352263704686`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Displaying Lagrangianhc", "Subsection",
 CellChangeTimes->{{3.702078477047882*^9, 3.702078487101746*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", "Lagrangianhc", "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.7020784909032526`*^9, 3.7020785156664343`*^9}}],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"M", " ", "R", " ", 
    RowBox[{"(", 
     RowBox[{"\[Pi]", "-", 
      RowBox[{"2", " ", 
       RowBox[{"cos", "(", 
        RowBox[{"\[Theta]", "(", "t", ")"}], ")"}]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"R", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "(", "t", ")"}], "2"]}], "-", "g"}], 
     ")"}]}], "\[Pi]"], TraditionalForm]], "Output",
 CellChangeTimes->{3.702585830389433*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 3: Lagrangian of the Disk", "Section",
 CellChangeTimes->{{3.70203536997799*^9, 3.7020353758262005`*^9}, {
  3.7020793306060147`*^9, 3.702079333234188*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LagrangianDisk", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "m", " ", 
     SuperscriptBox["VcmDisk", "2"]}], "+", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "IzcmDisk", " ", 
     SuperscriptBox["wd", "2"]}], "-", 
    RowBox[{"m", " ", "g", " ", 
     RowBox[{"(", 
      RowBox[{"R", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"R", "-", "r"}], ")"}], 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], ")"}]}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7020353794821367`*^9, 3.7020354522456865`*^9}}],

Cell[CellGroupData[{

Cell["storing wd in terms of knowns", "Subsection",
 CellChangeTimes->{{3.7020354786993246`*^9, 3.702035497664493*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"wd", " ", "=", " ", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], " ", "R"}], "+", 
     RowBox[{"r", " ", 
      RowBox[{
       RowBox[{"\[Phi]", "'"}], "[", "t", "]"}]}], "-", 
     RowBox[{"R", " ", 
      RowBox[{
       RowBox[{"\[Phi]", "'"}], "[", "t", "]"}]}]}], "r"]}], ";"}]], "Input",
 CellChangeTimes->{{3.702035510968747*^9, 3.7020355688904696`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["storing VcmDisk in terms of knows", "Subsection",
 CellChangeTimes->{{3.7020356072981367`*^9, 3.70203562225939*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VcmDisk", " ", "=", " ", 
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"R", "-", "r"}], ")"}], 
          RowBox[{
           RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "R"}]}], ")"}], "2"], 
      "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "-", "r"}], ")"}], 
         RowBox[{
          RowBox[{"\[Phi]", "'"}], "[", "t", "]"}], 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], ")"}], "2"]}], 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7020356400639515`*^9, 3.702035741560522*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["storing IzcmDisk in terms of knowns", "Subsection",
 CellChangeTimes->{{3.70203576452308*^9, 3.7020357802560225`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IzcmDisk", " ", "=", " ", 
   RowBox[{
    RowBox[{"1", "/", "2"}], " ", "m", " ", 
    SuperscriptBox["r", "2"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7020358505561886`*^9, 3.7020358655072155`*^9}, {
  3.702078552149292*^9, 3.7020785683702593`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Displaying Lagrangian of the Disk", "Subsection",
 CellChangeTimes->{{3.702078576690019*^9, 3.7020785839971766`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", "LagrangianDisk", "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.7020785878266163`*^9, 3.702078602134192*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["1", "4"], " ", "m", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"4", " ", "g", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "-", "R"}], ")"}], " ", 
          RowBox[{"cos", "(", 
           RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", "R"}], ")"}]}]}], 
     "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", "R"}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "(", "t", ")"}]}], "+", 
        RowBox[{"R", " ", 
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "(", "t", ")"}]}]}], ")"}], "2"], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r", "-", "R"}], ")"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}], " ", 
            RowBox[{"cos", "(", 
             RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}], "+", 
           RowBox[{"R", " ", 
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "(", "t", ")"}]}]}], ")"}], "2"], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"r", "-", "R"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Phi]", "\[Prime]",
            MultilineFunction->None], "(", "t", ")"}], "2"], " ", 
         RowBox[{
          SuperscriptBox["sin", "2"], "(", 
          RowBox[{"\[Phi]", "(", "t", ")"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.702585830590723*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Creating new equation for the Lagrangian of the \
system", "Subsection"]], "Section",
 CellChangeTimes->{{3.7020359065866504`*^9, 3.702035925655553*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LagrangianS", " ", "=", " ", 
   RowBox[{"LagrangianDisk", "+", "Lagrangianhc"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702035941964533*^9, 3.7020359577748547`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 4: Finding Equations of motion", "Section",
 CellChangeTimes->{{3.7020360007868624`*^9, 3.7020360074719467`*^9}, {
  3.7020793105038357`*^9, 3.702079313553541*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"equation1", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"LagrangianS", ",", 
         RowBox[{
          RowBox[{"\[Theta]", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], 
      "]"}], "-", 
     RowBox[{"D", "[", 
      RowBox[{"LagrangianS", ",", 
       RowBox[{"\[Theta]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "0"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.702036019128916*^9, 3.7020360748684654`*^9}, {
  3.702036155100211*^9, 3.702036226843608*^9}, {3.7020363213515415`*^9, 
  3.7020363223577123`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"equation2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{"LagrangianS", ",", 
         RowBox[{
          RowBox[{"\[Phi]", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], 
      "]"}], "-", 
     RowBox[{"D", "[", 
      RowBox[{"LagrangianS", ",", 
       RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "0"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.702036235274721*^9, 3.70203627718412*^9}, {
  3.702036326829398*^9, 3.702036327599213*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EOMs", " ", "=", " ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"equation1", ",", "equation2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Phi]", "''"}], "[", "t", "]"}]}], "}"}]}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.7020362801842337`*^9, 3.702036306375884*^9}, {
  3.7020363414535275`*^9, 3.702036374187396*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"g", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"6", " ", "M", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{"m", " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}]}], ")"}]}]}], 
         ")"}]}], "+", 
       RowBox[{"6", " ", "M", " ", "R", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
       RowBox[{"3", " ", "m", " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{"r", "-", "R"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Phi]", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}]}], 
      RowBox[{"R", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"12", " ", "M", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", "m"}], "-", 
            RowBox[{"6", " ", "M"}], "+", 
            RowBox[{"2", " ", "m", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"m", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", 
               RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}]}]}], ")"}]}]}], 
        ")"}]}]]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "M", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"3", " ", "m", " ", "\[Pi]"}], "+", 
                RowBox[{"4", " ", "M", " ", "\[Pi]"}], "-", 
                RowBox[{"8", " ", "M", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], ")"}]}], "+", 
          RowBox[{"2", " ", "M", " ", "R", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
          RowBox[{"m", " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"r", "-", "R"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Phi]", "[", "t", "]"}], "]"}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "-", "R"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"12", " ", "M", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}], "+", 
            RowBox[{"\[Pi]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "3"}], " ", "m"}], "-", 
               RowBox[{"6", " ", "M"}], "+", 
               RowBox[{"2", " ", "m", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], "+", 
               RowBox[{"m", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", 
                  RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}]}]}], ")"}]}]}], 
           ")"}]}], ")"}]}], ")"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7025858313710127`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 5: Finding EOM such that the disk does not exist", "Section",
 CellChangeTimes->{{3.702044532430842*^9, 3.7020445767586665`*^9}, {
  3.7020664184267435`*^9, 3.702066422569626*^9}, {3.702071229778885*^9, 
  3.702071231407196*^9}}],

Cell[TextData[{
 "substituting m = 0 in original equation ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Theta]", ".."], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.7020736316484804`*^9, 3.702073705721532*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"EOMs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "/.", 
   RowBox[{"m", "\[Rule]", "0"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.702073441263754*^9, 3.702073447895095*^9}, {
  3.7020735414074526`*^9, 3.702073569576235*^9}, {3.7020768083956604`*^9, 
  3.7020768120017586`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Theta]", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
  FractionBox[
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{"g", "+", 
      RowBox[{"R", " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Theta]", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}]}], ")"}]}], 
   RowBox[{"R", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.702585831468932*^9}]
}, Open  ]],

Cell["Note: Analytical work matches this equation", "Text",
 CellChangeTimes->{{3.7020736025224795`*^9, 3.7020736243655043`*^9}, {
  3.7020737299803877`*^9, 3.702073731281994*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 6: Finding EOM such that the half cylinder is fixed", "Section",
 CellChangeTimes->{{3.7020664288327475`*^9, 3.7020664530758286`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{"LagrangianDisk", ",", 
           RowBox[{
            RowBox[{"\[Phi]", "'"}], "[", "t", "]"}]}], "]"}], ",", "t"}], 
        "]"}], "-", 
       RowBox[{"D", "[", 
        RowBox[{"LagrangianDisk", ",", 
         RowBox[{"\[Phi]", "[", "t", "]"}]}], "]"}]}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Phi]", "''"}], "[", "t", "]"}]}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "'"}], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], "\[Rule]", "0"}]}], 
    "}"}]}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.702073762664513*^9, 3.702073841767393*^9}, {
  3.702076815873506*^9, 3.7020769020937047`*^9}, {3.702076943236385*^9, 
  3.702077126842673*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]", "\[Prime]\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", "g", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Phi]", "[", "t", "]"}], "]"}]}], 
     RowBox[{
      RowBox[{"3", " ", "r"}], "-", 
      RowBox[{"3", " ", "R"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.702585831492091*^9}]
}, Open  ]],

Cell["\<\
Note: Analytical work matches this equation

Note: Numberical approximations to find the peroid of the two equations in \
Part 5 and Part 6 are done in MATLAB\
\>", "Text",
 CellChangeTimes->{{3.702077146287741*^9, 3.7020771642975006`*^9}, {
  3.7020772451691785`*^9, 3.7020773053993444`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Part 7: Integrating and plotting equations of motion", "Section",
 CellChangeTimes->{{3.7020773934595785`*^9, 3.7020773957996387`*^9}, {
  3.7020774408730564`*^9, 3.7020774511323767`*^9}}],

Cell[CellGroupData[{

Cell["Initializing Constants", "Subsection",
 CellChangeTimes->{{3.70203683374148*^9, 3.7020368465139604`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "=", " ", "0.578"}], ";"}], 
  RowBox[{"(*", "kg", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m", " ", "=", " ", "0.162"}], ";"}], 
  RowBox[{"(*", "kg", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"R", " ", "=", " ", "0.15625"}], ";"}], 
  RowBox[{"(*", "m", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"r", " ", "=", " ", "0.038"}], ";"}], 
  RowBox[{"(*", "m", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", " ", "=", " ", "9.81"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"m", "/", 
    SuperscriptBox["s", "2"]}], "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.702036858261723*^9, 3.7020369323342505`*^9}, {
  3.7020657694666815`*^9, 3.702065776187826*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting EOMs with following initial conditions", "Subsection",
 CellChangeTimes->{{3.702078955376737*^9, 3.7020789927384434`*^9}, 
   3.702079279972827*^9}],

Cell[TextData[{
 "\[Theta](0) = 0, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      OverscriptBox["\[Theta]", "."], "(", "0", ")"}], "=", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"\[Phi]", "(", "0", ")"}], " ", "=", " ", 
     RowBox[{"\[Pi]", "/", "18"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[Phi]", "."], "(", "0", ")"}], " ", "=", " ", "0"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.702079015952736*^9, 3.702079131238394*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutionCurves1", " ", "=", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"equation1", ",", "equation2", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Pi]", "/", "18"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702036935587727*^9, 3.702037117313716*^9}, 
   3.7020371538132043`*^9, {3.702037256112209*^9, 3.702037257265934*^9}, 
   3.702041749352141*^9, {3.7021639399797344`*^9, 3.70216394091232*^9}, {
   3.702585785382087*^9, 3.7025857864520454`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"solutionCurves1", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"solutionCurves1", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Angular Displacement Vs. Time\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t (sec)\>\"", ",", " ", "\"\<Angular Disp. (rad)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta](t)\>\"", ",", "\"\<\[Phi](t)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7020371209841304`*^9, 3.702037146653269*^9}, {
  3.7020372605349245`*^9, 3.7020372934790845`*^9}, {3.702043915454421*^9, 
  3.7020440045172524`*^9}, {3.7020440717870884`*^9, 3.702044137134533*^9}, {
  3.7020442820286636`*^9, 3.7020442848311167`*^9}, {3.7021639438697214`*^9, 
  3.7021639445545635`*^9}, {3.702585779642871*^9, 3.7025857806154957`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zL4wImW2u6uLd1JwfCb7B4k4RpROsgl9dCIV1xQZsGSkMCKpL8oBxIY0zFM/
MFxWzIh8l3Lf/qBm4tgG5mj3cka0x9vT6cOpLKzQInX9XCUjWumNi6sPysLX
fzvU1NcwoivHtDvjFbPxl2n65F/tjMhdzfW+rWkOPrwgYfq5ixHV7a/R9EvI
waQVLUGzXkakEhwoQDecg//SvfcZ/cuIoqvrNNpNc7Ezc+GZ9DFa/IvyM4cj
czE7R9c/+ylGVPwt5tr3xlwst2O/9coiI5J/LyxRpZiHibvOi5X9o+ln/FYq
dCcPGwjb/HqxwYgu0DFKJgfm4SHRgOCzdEyIc5fJDtviPPxEIleLhYkJ/f6h
Z2fWm4dZpdvp61mZUJEBPPSlz8cR/62VvONkQu/HU2MGxPKxjMLeRwY8TMi+
Wu7HPZSPK06clebfwYQmKK+37TXMx/qn7w52CjAhDfPEGrpH+XjgzNvIT0JM
aHd7bOL2N/nYUT3zkuleJkSxro2+EJGPmbWbOQ7sZ0InwoJWipLzcbjeMnlE
ggkpDHicvFiQj6UuCz1Lk2JCkz58J3cR83HZdVCwl2NCL2tC+bdV5+MLt8wn
jh5hQptf2U4dr8/Hfaav45ePMSHyj203gr/lYwfLVKPSk0zo80y1rRhtndGm
YceL00zo5FpA6WhVPg57MP9N9QwN51Q2j+F8fMhR4CWzGhNq0rD3O0TjL3E+
dbpOgwntcdrPlEjTp/PceNFfhwk1r8QkWNL0//bwSr+oz4TkRIqF7Wj+7F59
vbPzMhOiP/jLgkjzT3hbL9x5jQnNzecUmxrl4+CA6dYoQyZUUlgVc1U1H4uH
8L0zMWZCavVMo3EH8nFB+HF1cXOaX6pdzAXmfKzxyXBz2JIJ2bwpEjMaysO2
iXF2D+yYUNAtnRMF4Xl4M6Va4qgDE7qg29/M/SAPB2aO9yw9ZkLcoc1qA6p5
OK/oqJ7bcyZk+uh19I7BXKxefo1F1YMJxbi2J3lk5uKOSlfM9JIJid+6QH3p
kovX68j/+fsxoXuOWuccmHNx1IV17thAJsRjcPmWDCUHKzcpTBWEMKGK+z7c
J17k4OedCWl9UbR+yHjP2k9m483h15IK6TS/VmWNualZ+LMNkVUzmwn5veiz
PHslC6tMrwzfymdCPbKxbpz/MvGLpXuJr8uZUN321fCiNxmYwKSzv+s7EzLU
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
Bcns4GPuzSWDS89K+6qYFqSwXdT6YB4ZThL+UteXtCCVbSq/rQrI8Jj2Qrep
rwVpbIW0Y0VksNHtzU+ZakE7tljqu5aQ4e7ACduitWyko+E+5llGhpWz3jGz
imy0d3O8WnAlGb6zrmpK2rORiVrOs8vVZHi+kCb9z5eNzFVr/a+zyDBi6m5H
iGYja5VHYrfqyHAn0Xr9wXtsZKc80pzaQIbfd852NBazkaPSnFNWExn+rTP9
ebSRjdw2CawuxFx+lUTOyfewkYeieFEFmwybW510pV6xkc9GdbO6Ni4fXcev
GI2w0XkFw9kWDhk6KOcK0z6zUZC8zZ2uTjKc8Dc0lJ9mo7ANnrv6u8kQ2pUl
OjjLRlflwoZf95JhR4u/dPs8G12TTbo8/JgM/0XdiXz/i43iZfI3jj8hc//b
qXkqXDtZurF36in3fOsMUvkcG6VK9XvPP+faFpuunJ5ho3TJUcq/l1z+Xn2f
PjbBRjkSC6xVb7j6ae70j/3IRoXia+2F35KhcJ2hx8IbNipbL81DG+T2R/Fl
85zHbFQlti1H/D23/pbDA4ktbFS/bt++DSNkSAjLm+ioYCMsaj+p/JEMeWbf
kw0y2aid4RO/dZQMA3P7JNfeZKNu+pVtu8a4/Moe/il3kY36aClv9D+TYULY
vSHOlY1eUIuDjSfIUJ6li8wPstEApUX68CQZWryjQjy3s9F78ov2o1Nk0Aso
yBgXY6NR0mf3EzNkODOxl6fjXwuaEiFW+MyRQebwDLOZ3YJmCRusAubJcIhw
4NbHjBa0ILxz8dICGW7ffdsdHNqCVq511Lv5lwynDLM3b9reggTW+P13+x8Z
XvrvN9hLaEEEoeiYNB4K7Jer+PK+FyNRgfKnJXwUkEn4c/GPDEaSq9vPV/NT
oKir/t9QVzOS43+zrkmAAsU73p4QPNOM1Ph4nB6tpcA98kSLV0kTMuAx/zFB
pcADDb/maZFGVGhyfOoJnQIen29cniloQOQ7XhNVohQw1sx4PKvXgD6q3vgY
Kk6BW0kPN2z1rEcRdj3PyBsoYCUu5fWrsBa11BhWam+lwAA9LGz7UBXSPaPl
d+0QBUREl3yqZvJRTu0+H28LCjTfLTwd8zYPreWz8bS0ooBwbyTvfNtDNJjq
7yJ5lAIJx003kG7noOCuSkumIwW0VO9GFGlnoHo5te1vvSkwV1RfcDwsDsl6
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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t (sec)\"", TraditionalForm], 
       FormBox["\"Angular Disp. (rad)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Angular Displacement Vs. Time\"", TraditionalForm], 
     PlotRange -> {{0, 6}, {-0.1741604102753155, 0.17453292519931035`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta](t)\"", "\"\[Phi](t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7025858317822466`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting EOMs with following initial conditions", "Subsection",
 CellChangeTimes->{3.7020791632963824`*^9, 3.7020792762621317`*^9}],

Cell[TextData[{
 "\[Theta](0) = \[Pi]/18, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      OverscriptBox["\[Theta]", "."], "(", "0", ")"}], "=", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"\[Phi]", "(", "0", ")"}], " ", "=", " ", 
     RowBox[{"\[Pi]", "/", "9"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[Phi]", "."], "(", "0", ")"}], " ", "=", " ", "0"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.7020791943664813`*^9, 3.7020792194567456`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutionCurves2", " ", "=", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"equation1", ",", "equation2", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Pi]", "/", "18"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Pi]", "/", "9"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7020373246555977`*^9, 3.702037378891368*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"solutionCurves2", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"solutionCurves2", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Angular Displacement Vs. Time\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t (sec)\>\"", ",", " ", "\"\<Angular Disp. (rad)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta](t)\>\"", ",", "\"\<\[Phi](t)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7020373835014277`*^9, 3.7020373871294436`*^9}, 
   3.702044212892928*^9, {3.7020442739181356`*^9, 3.7020442759866033`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwUV3c81t8Xf4zHeFBJGRWhUiJSvpTKuRQhIqkILSXZSVqSJCklygxZ2dl7
3meaDZE9MyJ77/F7fn99Xud1zj33nPO+n3PeR+KGg+EtVgKBEM5BIPz/u3DG
PsLAwV1VQH5AR/hSOZhweAj8lLoCCQrJhw9eLIcoP7j4Tsoe7m791vjwfDmQ
Nl71bwl3gcNFm4WnzpYD7cLnB7ZSbnBc4LBsuFY5qP4YS1tv8gDsLm/7AJVD
2N0NklXhXrB23Bc8lcphYYtc4Ifrb4CUVixN218OFwr0uMykfGFToUelomg5
tKTmlX6Y9QMz545fLXzl8OqZ5oP5pg+QxCoskL3CAKVzjQfNigLgoVmJM+Uf
A/okLYfI4UGgI+G1SGxgwIeZ2dg9z0Jgh+2/gudlDFArf2n+5vonaHEzHvsv
ngGf78TVnpf6DPexnaieIwPiI7ZpmLFHwaU+jU3Zhgxw8+qJ9p2NgijDi9aX
DjNA1tjJdLopBtKjT3ndGKcDm5pKwZ6qWDi6N+PA92o6tEqzbjUu+gLah25w
u32hg/ey/4+S8Hjw0pbyKjakw9U+E5nxdwmgdDB8k95eOih9l/CWeJYI23eX
x8ot0aD/c6aa1/VkcA31PDL6iQbq6r9y9KXSgO/w+Kf0SiqIyITyewilQ+xM
7IyQHxUWXh9UvsyeAYId5/uHLlCh1mnh49vZDLCy7GjobqeA2ylvvcmmLODk
9vvk3UyGoSMjT94YZEPq7nE58kcyXDhgkLyrKhs+ari5vtIjg6ygMOfFohw4
anUgJO8RhtaBBHJReB7UPRG99UiwFDTbecbPb80HX4VDjjIPSiCz1kF09F0+
pL27tuNqQzF4Fyo/3vmsAFpvHO1+8aYIlH0qDnteLwKhKb6Gmy35ECA3EK8n
VQZPT/eW1AtlQTV7Wz5PUhk8+vs1pPl0JhDaflRWyWDQ4ClQknPJgLyTprMx
wmQI2tE/ej08FSQn1IV2ilGgcVLfsLU9Hpa0NpsKSdNgr4ixWo7oB9iq+NbC
xZoGIcq+OgWn38HBnRy2DSk0eGWVRdxl5AWWs4uuH+Xo4DIpWhr0xxHqov98
3qjIAJemn39U5F7g5KWMHk6oAMe+BeXlkzGY0b9/2NK9Am7GhGkO/I3F3bVf
phmUCkijWPG5esVhwYQQds9TlTA2Kk7vLUrEHufdpQg6VZAouqGkZDoNR6gu
yV31qYLhv16prscycIG0s3LZtyr4zvF3AS9l4LH121qu+tUAl7k9B+5m4ctf
9a0XjGpgtqn1cB7KxfeDq5wuBdVAo22ni/NoLvbzOPkkr6kG7IwifbSD83C5
sfJb58vfIKzw9O7lP/n4EHFn2sTV77BjKzFm9FwR1psIydOP/g6O3RZnavuL
sFXbZpzW8x1ebeToNnMpxp8zOWptb/2ApUT4qPmuBJOujE0OWv+EGur26iP+
Zdil4dfiVMJPeLXF6potC8a9urksq30/Qe1vXJ+TPcadomXe3vK14Ds4fsNh
JxkHtKS/5TtbC2q/d0xuP0fGOoHRfh9sa+FuSkP2nudknMf7MiQ8qRZmR2WF
NdvJ2LbSJVyishYatTNSL3FSsKSnVVT831rYs7PHvOQgBfsun0nM2PUL8gWH
zru4UfCp/BNf/1P/BVECgt4VMRS85CSfUXTtF1Bl2LIsGBRsObS5gB7xC04t
qbG4EKl4Rzx7iXbJL4iJ/7UwKEnFddfn8I/WXxDod/x1lCoVe4sO0s4v/oKT
V5fMw4ypWLWlpaJZqA7kb18/3uxIxTMBNTXmSnWgcGk/28VXVJxsUPqzx6gO
OjTGkgTCqfgab3r97Xt1EFFbgDalU7FgZVTTiH8d8OHhcR0yFX978aHtbkYd
sDltWKD+pGIP8Oya+1EHdU2emQ86qPjI8v3eJ6N18INT663VPyoey7s9QOCt
hy+2VRsDp6n4i5PJ8Mv99SDOztO2skzFl+XOjJO062EtOvBLJCsNbxo6Pv3+
dj28HrRWecpJw+VxcvNbvOrBUX3teSCJhl2viy+HfqmH+mtWDwd5aPiQ6OZ1
MVo9qL1LOOTClAeb2di+/KmH5PDqDlVuGv4cMMshTfgNQhk7sDqRho0MBkhp
Yr/hmOBNRY91Kibxtmw4fOI3fHpjkrM6T8XkiurNBaa/oYRt88/cMSp2eVEi
eOLxb7D3uyqX0kvFspC2jRryG44fUgzqbKTinqVIsdP5v+F97L5+g0oqDsnz
l/zW8BtSz0tvZSug4rNOL6TOzfyG+a+k43NxVMwud39/4+YG+IZE3sp8oOKi
f5ZypgoNcL0+w+iLKxVLXddRumXfAEQuzl2WulTcvuO4ytDbBpg4v3Q1S4GK
PzQfUHVIaYC+Vr2XWlupeE2fX/PRYAM4B+ubXW6i4BweNp01jkaQMbug15pL
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
fCH6H/GAl+4=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t (sec)\"", TraditionalForm], 
       FormBox["\"Angular Disp. (rad)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Angular Displacement Vs. Time\"", TraditionalForm], 
     PlotRange -> {{0, 6}, {-0.4061542695695731, 0.4082522117232474}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta](t)\"", "\"\[Phi](t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7025858319744186`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting EOMs with following initial conditions", "Subsection",
 CellChangeTimes->{3.7020791750072007`*^9, 3.7020792727852793`*^9}],

Cell[TextData[{
 "\[Theta](0) = \[Pi]/9, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      OverscriptBox["\[Theta]", "."], "(", "0", ")"}], "=", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"\[Phi]", "(", "0", ")"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], "/", "9"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      OverscriptBox["\[Phi]", "."], "(", "0", ")"}], " ", "=", " ", "0"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Text",
 CellChangeTimes->{{3.7020792352814445`*^9, 3.702079260933287*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"solutionCurves3", "=", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"equation1", ",", "equation2", ",", 
       RowBox[{
        RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", 
        RowBox[{"\[Pi]", "/", "9"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
       RowBox[{
        RowBox[{"\[Phi]", "[", "0", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "/", "9"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702037410481762*^9, 3.7020374318408957`*^9}, 
   3.7020442342527013`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"solutionCurves3", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", 
     RowBox[{
      RowBox[{"solutionCurves3", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "6"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Angular Displacement Vs. Time\>\""}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t (sec)\>\"", ",", " ", "\"\<Angular Disp. (rad)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta](t)\>\"", ",", "\"\<\[Phi](t)\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7020374468162394`*^9, 3.7020374497679963`*^9}, {
  3.7020442396690617`*^9, 3.702044267663519*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
v7hrpkHyLqvaKN+OA2368+bBbsSCrdxm3gxHDqS3OVgp2ork37MWLP6zHOiA
qbzYNS8WrEQ3c21y50C/Pn8eWrrDgvE6K12ji2T++7+dGIxgQaOqzfMb1zjQ
GU49oz6SL0rs22qe3+RAtMvCDr8/seB9uO1Cjj8HGp69aXuhmgUPJhxOjN7j
QO5K/m53vrPAd333fd5wDiQurr9DbogF/1mdKtoYyYGoE6UeciQf78txW3fy
BQeys1fMMiH5SFzu6QbXONKOiuY0EyT57UGFqmciGa8yQC2H2gIf5ie0r6Vw
oI7UsPV315I86SJjcCeNA91uSu/8TPKyWdN+4wcZHKjYWNbJSakF1uhfM3+S
zYHubXLL+I/kt56UlKOxeWS9Rgfqv20h9ShM+5RPHGg2vBHnaJN6t9jOZJaS
8R6pvJwleXDfL/ULBeUciJHbdDZuB5mftd2VsioOlLpycncmyY89Zfdu1dVx
INOLbzQ37SL11PLvMho5UKjrm+O8u0m96N7wDjoHGvwbyLAibTNOyrM+Fgfa
ZfqglIO011zcHT/WzoFs1qsbyJL+vR3nU+e/k+srHN6JpH6W6YvMlW4OpP2s
LjycjH8rpzqfd4ADBZ+2zesh89svN/uZMsyBooxzpBLJ/CVC5WvWjnMgVD85
WkvW1zd/sHnDNAd6z2t12pasP8vlZqvaPAfy69YutCb7c6sp7ee2vxxo5Ona
jcVk//brtw7uXuZAmTZvBh6Q/V2Tyjlpys6JtHti91SR/e+laC1YcnMiLoOu
6+fI88m65chmy8+JYtlvtfqS53frVxjvKWFOFElLTZkn+Xa/dZGIuygniq79
pPWDPO8+NXF5v7WcyCW3nTH1gwXZ0YYqIbKc6OOWS49lCRb4cV7cGqHAiQzl
KecKa1kg2Vm/5/VmTjTlVfJdJ4sF/aYLZukanEhlZgUkk1jwMUfxcK4WJ2JP
wCbnnrLgQKi/S7U+J3qoWj1ld430/51xrnk3J2rRMfNZPEvGd+nwajPkRKF+
tY5CJ8h4+rqBw/s5UfqGFyYBeqTer5EkYTtO5NCp71w9RsBta6n3Eo6c6IGy
0ezvdgLMy01y15/iRJ53PwjFVxEwEJ34Res8J1ra5am4P4YAqX3H+m1ucKKG
4KYhLUSu5wSNOd7mRMCh+FxKmYCPch/nzgaS9X/k+Xp9Nan3W5D7Rign+jpO
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
+IagVfDH14sM34Hkt5jQul6CX6xnR+4paIVxpaithjIUXiiVs7RUEoLEomFI
WY7CUc8HtQl3m+HTLs7xMXkKB/XoWelOzfC16O6DUiUKpUEc7ujxVyCz4628
I4dCmBi5N/zpBcy7b1q+eymF9SqcQdN3jWDr2qN9bR2FEVVKMr7JtZBwzkms
EkVhJ8/dpsQ+B+oz0yqWx1A4/7C5e86qLJAp6k1xjKPQPzhws/JgJkS1x3Cj
4ykcO8R/uI2XAaF6ZQkjSRSK9yp898w7CVsFBibPb1D4B+m2FW9JoxdLFMPO
Cii87+OOKCymd8hvd8ypoXBi3JR3NO0RnUFuk+paCu1qz0s9vUtodTt7+nMD
hWprDwXId5fSssmRGv5CCjW4BhlnB8rpQf2hEsceCo0/Ww85jgpofRtu4u4+
CnUHBNPX8qvpvW6nd0X3U7iMCRvK319DMwd1FEoGKfQ5YxL7c4Cmm6t53rr/
UWg7JOWXh9XRyq13TewmKIw1Ole1SVhHO4snf+6YpPBqRYukzvQpXaOSei/1
G4UXX3vZwvBTWrqkJ7pgikKV4nznDS719O8WZlueSyn0LchauOJOPR2xPlpf
/JPC4hXOMkOyDfQj3vNvMzMUbg6KMY/b00D/D4je0z8=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t (sec)\"", TraditionalForm], 
       FormBox["\"Angular Disp. (rad)\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Angular Displacement Vs. Time\"", TraditionalForm], 
     PlotRange -> {{0, 6}, {-0.37122766926780937`, 0.4244060744691139}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"\[Theta](t)\"", "\"\[Phi](t)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.702585832166442*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1520, 781},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>0.75 Inherited,
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 228, 4, 534, "Title"],
Cell[CellGroupData[{
Cell[833, 30, 118, 1, 106, "Section"],
Cell[954, 33, 1728, 38, 576, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2719, 76, 176, 4, 106, "Section"],
Cell[2898, 82, 357, 10, 67, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3292, 97, 226, 3, 106, "Section"],
Cell[3521, 102, 701, 21, 67, "Input"],
Cell[CellGroupData[{
Cell[4247, 127, 153, 2, 72, "Subsection"],
Cell[4403, 131, 934, 28, 67, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5374, 164, 111, 1, 72, "Subsection"],
Cell[CellGroupData[{
Cell[5510, 169, 183, 4, 45, "Input"],
Cell[5696, 175, 552, 17, 98, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6309, 199, 167, 2, 106, "Section"],
Cell[6479, 203, 633, 19, 47, "Input"],
Cell[CellGroupData[{
Cell[7137, 226, 119, 1, 72, "Subsection"],
Cell[7259, 229, 463, 14, 64, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7759, 248, 122, 1, 72, "Subsection"],
Cell[7884, 251, 956, 30, 50, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8877, 286, 124, 1, 72, "Subsection"],
Cell[9004, 289, 290, 7, 47, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9331, 301, 123, 1, 72, "Subsection"],
Cell[CellGroupData[{
Cell[9479, 306, 183, 4, 45, "Input"],
Cell[9665, 312, 1981, 59, 92, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11707, 378, 177, 2, 88, "Section"],
Cell[11887, 382, 203, 4, 45, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12127, 391, 175, 2, 106, "Section"],
Cell[12305, 395, 617, 18, 45, "Input"],
Cell[12925, 415, 567, 17, 45, "Input"],
Cell[CellGroupData[{
Cell[13517, 436, 524, 15, 45, "Input"],
Cell[14044, 453, 5335, 140, 181, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19428, 599, 240, 3, 106, "Section"],
Cell[19671, 604, 254, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[19950, 615, 394, 10, 45, "Input"],
Cell[20347, 627, 742, 23, 75, "Output"]
}, Open  ]],
Cell[21104, 653, 180, 2, 45, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21321, 660, 145, 1, 106, "Section"],
Cell[CellGroupData[{
Cell[21491, 665, 1002, 30, 75, "Input"],
Cell[22496, 697, 464, 14, 66, "Output"]
}, Open  ]],
Cell[22975, 714, 303, 7, 102, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23315, 726, 194, 2, 106, "Section"],
Cell[CellGroupData[{
Cell[23534, 732, 111, 1, 72, "Subsection"],
Cell[23648, 735, 826, 24, 196, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24511, 764, 163, 2, 72, "Subsection"],
Cell[24677, 768, 535, 17, 47, "Text"],
Cell[25215, 787, 1053, 26, 75, "Input"],
Cell[CellGroupData[{
Cell[26293, 817, 1171, 27, 75, "Input"],
Cell[27467, 846, 80858, 1376, 339, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108374, 2228, 137, 1, 72, "Subsection"],
Cell[108514, 2231, 545, 17, 47, "Text"],
Cell[109062, 2250, 889, 24, 75, "Input"],
Cell[CellGroupData[{
Cell[109976, 2278, 943, 24, 75, "Input"],
Cell[110922, 2304, 80873, 1377, 339, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191844, 3687, 137, 1, 72, "Subsection"],
Cell[191984, 3690, 564, 18, 47, "Text"],
Cell[192551, 3710, 936, 26, 75, "Input"],
Cell[CellGroupData[{
Cell[193512, 3740, 918, 24, 75, "Input"],
Cell[194433, 3766, 59258, 1022, 375, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
